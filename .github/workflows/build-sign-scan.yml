name: Build, SBOM, Sign, Scan
on:
  push: { branches: [ main ] }
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      id-token: write   # OIDC
      contents: read
      packages: write
      security-events: write
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build & push (multi-arch)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: backend/Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ghcr.io/${{ github.repository }}/backend:${{ github.sha }}
          build-args: |
            BUILD_DATE=${{ github.run_id }}

      # SBOM via Syft (CycloneDX)
      - name: Generate SBOM (CycloneDX)
        uses: anchore/sbom-action@v0
        with:
          image: ghcr.io/${{ github.repository }}/backend:${{ github.sha }}
          output-file: sbom.cdx.json
          format: cyclonedx-json

      # Image scan via Trivy
      - name: Scan image (Trivy)
        uses: aquasecurity/trivy-action@0.24.0
        with:
          image-ref: ghcr.io/${{ github.repository }}/backend:${{ github.sha }}
          format: 'sarif'
          output: 'trivy.sarif'
      - uses: github/codeql-action/upload-sarif@v3
        with: { sarif_file: trivy.sarif }

      # Sign image with cosign (keyless OIDC)
      - name: Install cosign
        uses: sigstore/cosign-installer@v3.6.0
      - name: Cosign sign (keyless)
        run: |
          cosign sign ghcr.io/${{ github.repository }}/backend:${{ github.sha }} --yes
      # SLSA provenance
      - uses: slsa-framework/slsa-github-generator/actions/generator@v2
        with:
          build-definition: .slsa/builddef.json
